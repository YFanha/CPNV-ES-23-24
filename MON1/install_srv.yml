---
- name: Install and configure Prometheus
  hosts: your_target_server (Ubuntu 22.04)
  become: yes
  vars:
      user: promadm
      app_root_dir: "/app/prometheus2.51.1"
      prom_source_url: "https://github.com/prometheus/prometheus/releases/download/v2.51.2/prometheus-2.51.2.linux-amd64.tar.gz"
      prom_archive_dest: "/tmp/prometheus-2.51.2.linux-amd64.tar.gz"
      prom_tmp_dir: "/tmp/prometheus-2.51.2"
  tasks:
	  - name: Download Prometheus binary tarball
		  get_url:
	    url: "https://github.com/prometheus/prometheus/releases/download/v2.51.2/prometheus-2.51.2.linux-amd64.tar.gz"
	    dest: "{{ prom_archive_dest }}"

    - name: Extract Prometheus binary tarball
      ansible.builtin.unarchive:
        src: "{{ prom_archive_dest }}"
        dest: "{{ prom_tmp_dir }}"

    - name: Create appplication directory
      file:
        path: "{{ app_root_dir }}"
        state: directory
        recurse: yes
        owner: yann
        group: yann
        mode: 751
	    
    - name: Create directories for Prometheus with permissions
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: "775"
      loop:
        - "{{ app_root_dir }}/rules"
        - "{{ app_root_dir }}/rules.d"
        - "{{ app_root_dir }}/files_sd"
        - /var/lib/prometheus
      
    - name: Move Prometheus binaries and configuration files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
      with_items:
        - { src: "{{ prom_tmp_dir }}/consoles", dest: "{{ app_root_dir }}/", owner: "yann", group: "yann", mode: "0644" }
        - { src: "{{ prom_tmp_dir }}/console_libraries", dest: "{{ app_root_dir }}/", owner: "yann", group: "yann", mode: "0644" }
        - { src: "{{ prom_tmp_dir }}/prometheus.yml", dest: "{{ app_root_dir }}/", owner: "yann", group: "yann", mode: "0644" }
    
    - name: Copy prometheus and promtool binaries to /usr/local/bin/
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/usr/local/bin/"
        mode: "0755"
      with_items:
      - "{{ prom_tmp_dir }}/prometheus"
      - "{{ prom_tmp_dir }}/promtool"


    - name: Create Prometheus user
      user:
        name: prometheus
        shell: /sbin/nologin
        system: yes
    
    - name: Installing htpasswd
      apt:
        name: apache2-utils
        state: latest

    - name: Create file web.yml
      # Group with command htpasswd + template (prom_user & prom_user_pass)


    - name: Create Prometheus.service
      # Template



    ## Reload configuration
    - name: Reload systemd to apply configuration
      systemd:
        daemon_reload: yes

    - name: Start Prometheus service
      service:
        name: prometheus
        state: started
        enabled: yes
    
    # Grafana
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - gnupg2
        - apt-transport-https
        - software-properties-common
        - wget

    - name: Add Grafana GPG key
      ansible.builtin.shell: "cat grafana.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/grafana.gpg >/dev/null"

    - name: Add Grafana repository
      ansible.builtin.shell: "echo 'deb [signed-by=/etc/apt/trusted.gpg.d/grafana.gpg] https://packages.grafana.com/oss/deb stable main' | sudo tee /etc/apt/sources.list.d/grafana.list"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Grafana
      ansible.builtin.apt:
        name: grafana
        state: present

    - name: Backup original Grafana configuration
      ansible.builtin.shell: "cp /etc/grafana/grafana.ini /etc/grafana/grafana.ini.backup"
      
      
    - name: Modifier les lignes comment√©es dans le fichier de configuration Grafana
      ansible.builtin.lineinfile:
        path: /chemin/vers/votre/fichier_de_configuration
        regexp: '^;(http_addr|http_port)\s*=\s*(.*)'
        line: '\1 = {{ item.value }}'
        state: present
      loop:
        - { value: 'localhost', key: 'http_addr' }
        - { value: '3000', key: 'http_port' }

    - name: Restart Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        state: restarted
